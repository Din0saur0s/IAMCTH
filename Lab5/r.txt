---
output:
  md_document: default
---
---
title: "Исследование метаданных DNS трафика"
output: md_document
date: "2022-11-23"
---
```{r, setup, include=F}
knitr::opts_chunk$set(echo=F)
```
## Цель работы
1. Закрепить практические навыки использования языка программирования R для обработки данных
2. Закрепить знания основных функций обработки данных экосистемы tidyverse языка R
3. Закрепить навыки исследования метаданных DNS трафика
## Исходные данные

RStudioCloud

## Код программы

### Подготовка данных (Задания 1-3)
```{r}
#install.packages("tidyverse")

header <- read.csv("header.csv")

# Импортируйте данные DNS
# Добавьте пропущенные данные о структуре данных (назначении столбцов)
# Преобразуйте данные в столбцах в нужный формат

log <- read.csv(file = "dns.log", sep = "")
colnames(log) <-  c(
  'ts',
  'uid',
  'ip_host',
  'port_host',
  'ip_recipient',
  'port_recipient',
  'protocol',
  'trans_id',
  'query',
  'qclass',
  'qclass_name',
  'qtype',
  'qtype_name',
  'rcode',
  'rcode_name',
  'QR',
  'AA',
  'TC RD',
  'RA',
  'Z',
  'answers',
  'TTLs',
  'rejected'
)
```

### Задание 4

```{r}
# Сколько участников информационного обмена в сети Доброй Организации?

d1<-length(unique((grep(":", log$ip_host, value = TRUE)),(grep(":", log$ip_recipient, value = TRUE))))
d2<-length(unique(log$ip_host, log$ip_recipient))
d2-d1

```
### Задание 5
```{r}
#5. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?

toMatch <- c("192.168.","10.10","100.","172.")
ins <- length(unique (grep(paste(toMatch,collapse="|"), log$ip_recipient, value=TRUE)))
#внешние
outs <- d2-d1-ins
ins/outs*100 
```
### Задание 6

```{r}
# Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность.

log.2 <- log %>%
               group_by(ip_host) %>%
               summarise(N = n()
                         )
select(arrange(log.2,desc(N))%>%top_n(10),ip_host)
```
### Задание 7

```{r}
# Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений
library(stringr)

net.1 <- c(".net",".com",".org")
net.2 <- unique (grep(paste(net.1,collapse="|"), log$query, value=TRUE))
log.2 <- as.data.frame(str_extract(net.2, "\\w*.[a-z]*$"))
names(log.2)[1] <- "query"

log.3 <- log.2 %>%
  group_by(query) %>% 
  summarise(N = n())
select(arrange(log.3,desc(N)) %>% top_n(10),query)

```

### Задание 8

```{r}
# Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам.

library(dplyr)
log.3%>%summary()
```

### Задание 9

```{r}
# Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

library(dplyr)
log.4<-data.frame(log$ip_host,log$query)
names(log.4)[names(log.4) == 'log.ip_host'] <- 'ip_host'
names(log.4)[names(log.4) == 'log.query'] <- 'query'

log.4%>%group_by(log.4$query)
```

### Задание 10

```
# Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого
можно использовать сторонние сервисы, например https://v4.ifconfig.co/

1) 

```

```{r}
#install.packages("devtools")
require(devtools)
# install_github("ip2location/ip2location-r",force=TRUE)

# #install.packages("ip2location")
require(ip2location)

ip2location::open("~/IP-COUNTRY-REGION-CITY-LATITUDE-LONGITUDE-ZIPCODE-TIMEZONE-ISP-DOMAIN-NETSPEED-AREACODE-WEATHER-MOBILE-ELEVATION-USAGETYPE-SAMPLE.BIN")

# devtools::install_github("hrbrmstr/domaintools",force = TRUE)
# library(domaintools)
# 
# # current verison
# 
# 
# # domaintools_username()
# whois("dropbox.com")
# domaintools_username
```

```{r}
websites <- data.frame(rbind("www.nytimes.com", "www.google.com", "www.facebook.com"))

websites <- as.data.frame(t(websites))
websites[] <- lapply(websites, as.character)
webVec <- unname(unlist(websites[1,]))

for(i in 1:length(webVec)){
shell.exec(paste(webVec[i]))
}
```